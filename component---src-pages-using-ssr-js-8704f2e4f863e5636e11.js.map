{"version":3,"file":"component---src-pages-using-ssr-js-8704f2e4f863e5636e11.js","mappings":"2MAKA,MAAMA,EAAS,QAAC,UAAEC,GAAW,SAC3B,0BACEC,MAAO,CACLC,OAAO,SACPC,QAAQ,oCACRC,QAAQ,OACRC,WAAW,SACXC,eAAe,kBAGjB,gBAAC,EAAAC,KAAI,CACHC,GAAG,IACHP,MAAO,CACLQ,SAAU,MACVC,eAAe,SAGhBV,GAGH,gBAAC,EAAAW,EAAW,CACVC,OAAO,cACPC,IAAI,qBACJC,YAAY,UACZC,IAAI,YACJC,OAAQ,GAAG,sBAEN,EAOXjB,EAAOkB,aAAe,CACpBjB,UAAU,IAGZ,QCgBA,MA3Ce,IAAmB,IAAD,MAAjB,SAAEkB,GAAU,EAC1B,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,EAAM,CAACpB,WAAiC,QAAtB,EAAAmB,EAAKE,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,UAChD,uBACEtB,MAAO,CACLC,OAAO,SACPsB,SAAS,sBACTrB,QAAQ,uBAKV,4BAAOe,GACP,0BACEjB,MAAO,CACLwB,UAAU,iBACVhB,SAAS,mBAEZ,MACI,IAAIiB,MAAOC,cAAc,gBAC5B,IACA,qBAAGC,KAAK,4BAA2B,YAGtC,C,+CCxCP,SAASC,EAAI,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAEP,EAAK,SAAEL,GAAU,EAC3C,MAAM,KAAEG,IAASD,EAAAA,EAAAA,gBAAe,YAc1BW,EAAkBD,GAAeT,EAAKC,aAAaQ,YACnDE,EAAgC,QAApB,EAAGX,EAAKC,oBAAY,aAAjB,EAAmBC,MAExC,OACE,gCACE,6BAAQS,EAAkBT,EAAK,MAAMS,EAAiBT,GACtD,wBAAMU,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASX,IACnC,wBAAMY,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAb,EAAKC,oBAAY,aAAjB,EAAmBc,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASX,IACpC,wBAAMU,KAAK,sBAAsBC,QAASH,IACzCb,EAGP,CAEAW,EAAIZ,aAAe,CACjBa,YAAY,IAQd,K,6GChDA,MA4BaO,EAAO,IAAM,gBAAC,IAAG,CAACd,MAAM,cAErC,UA9BiB,IAAoB,IAAnB,WAAEe,GAAY,EAC9B,OACE,gBAAC,IAAM,KACL,0BAAI,gBACW,yBAAG,yBAElB,yBAAG,mHAE4C,IAC7C,4BAAM,yCAA4C,KAEpD,uBACErC,MAAO,CAAEsC,MAAO,QAASC,aAAc,wBACvCzB,IAAI,eACJF,IAAKyB,EAAWG,UAElB,yBAAG,kCAC+B,IAChC,qBAAGb,KAAK,oFAAmF,6CAEvF,KAGN,gBAAC,EAAArB,KAAI,CAACC,GAAG,KAAI,2BACN,C","sources":["webpack://yet another mouse review/./src/components/header.js","webpack://yet another mouse review/./src/components/layout.js","webpack://yet another mouse review/./src/components/seo.js","webpack://yet another mouse review/./src/pages/using-ssr.js"],"sourcesContent":["import * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      margin: `0 auto`,\r\n      padding: `var(--space-4) var(--size-gutter)`,\r\n      display: `flex`,\r\n      alignItems: `center`,\r\n      justifyContent: `space-between`,\r\n    }}\r\n  >\r\n    <Link\r\n      to=\"/\"\r\n      style={{\r\n        fontSize: \"2vh\",\r\n        textDecoration: `none`,\r\n      }}\r\n    >\r\n      {siteTitle}\r\n    </Link>\r\n\r\n    <StaticImage\r\n      layout=\"constrained\"\r\n      src=\"../images/logo.png\"\r\n      placeholder=\"blurred\"\r\n      alt=\"Site logo\"\r\n      height={50}\r\n    />\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\n// import NavBar from \"./navBar\"\r\n\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: `var(--size-content)`,\r\n          padding: `var(--size-gutter)`,\r\n        }}\r\n      >\r\n\r\n\r\n        <main>{children}</main>\r\n        <footer\r\n          style={{\r\n            marginTop: `var(--space-5)`,\r\n            fontSize: `var(--font-sm)`,\r\n          }}\r\n        >\r\n          Â© {new Date().getFullYear()} &middot; Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst UsingSSR = ({ serverData }) => {\r\n  return (\r\n    <Layout>\r\n      <h1>\r\n        This page is <b>rendered server-side</b>\r\n      </h1>\r\n      <p>\r\n        This page is rendered server side every time the page is requested.\r\n        Reload it to see a(nother) random photo from{\" \"}\r\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\r\n      </p>\r\n      <img\r\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\r\n        alt=\"A random dog\"\r\n        src={serverData.message}\r\n      />\r\n      <p>\r\n        To learn more, head over to our{\" \"}\r\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\r\n          documentation about Server Side Rendering\r\n        </a>\r\n        .\r\n      </p>\r\n      <Link to=\"/\">Go back to the homepage</Link>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"Using SSR\" />\r\n\r\nexport default UsingSSR\r\n\r\nexport async function getServerData() {\r\n  try {\r\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\r\n    if (!res.ok) {\r\n      throw new Error(`Response failed`)\r\n    }\r\n    return {\r\n      props: await res.json(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      status: 500,\r\n      headers: {},\r\n      props: {},\r\n    }\r\n  }\r\n}\r\n"],"names":["Header","siteTitle","style","margin","padding","display","alignItems","justifyContent","Link","to","fontSize","textDecoration","S","layout","src","placeholder","alt","height","defaultProps","children","data","useStaticQuery","site","siteMetadata","title","maxWidth","marginTop","Date","getFullYear","href","Seo","description","metaDescription","defaultTitle","name","content","property","author","Head","serverData","width","borderRadius","message"],"sourceRoot":""}